// This file is generated by kconfig_compiler from kwordquiz.kcfg.
// All changes you do to this file will be lost.

#include "prefs.h"

//#include <kglobal.h>
#include <QtCore/QDir>
#include <QtCore/QFile>
#include <QtCore/QSettings>
#include <QtGui/QMessageBox>

class PrefsHelper
{
  public:
    PrefsHelper() : q(0) {}
    ~PrefsHelper() { delete q; }
    Prefs *q;
};
/*K_GLOBAL_STATIC(PrefsHelper, s_globalPrefs)*/
Prefs *Prefs::self()
{
  /*if (!s_globalPrefs->q) {
    new Prefs;
    s_globalPrefs->q->readConfig();
  }

  return s_globalPrefs->q;*/
  static Prefs inst;
  return &inst;
}

Prefs::Prefs()
{
  //QMessageBox::about(0, "Prefs Calling", "Creating Prefs");
  QSettings prefs;

  prefs.beginGroup("General");
  mFirstRun = prefs.value("FirstRun", true).toBool();
  mShowSearch = prefs.value("ShowSearch", true).toBool();
  mStartSession = prefs.value("StartSession", Prefs::EnumStartSession::Editor).toInt();
  mPrintStyle = prefs.value("PrintStyle", Prefs::EnumPrintStyle::List).toInt();
  mMainWindowState = prefs.value("MainWindowState").toByteArray();
  mMainWindowSize = prefs.value("MainWindowSize", QSize(650, 500)).toSize();
  mMainWindowPosition = prefs.value("MainWindowPosition", QPoint(50, 50)).toPoint();
  mShowStatusbar = prefs.value("ShowStatusbar", true).toBool();
  mRecentFiles = prefs.value("RecentFiles", QStringList()).toStringList();
  mLastOpenDir = prefs.value("LastOpenDir", QDir::homePath()).toString();
  mLastImageDir = prefs.value("LastImageDir", QDir::homePath()).toString();
  mLastSoundDir = prefs.value("LastSoundDir", QDir::homePath()).toString();
  prefs.endGroup();

  prefs.beginGroup("Editor");
  mColumnTitles1 = prefs.value("ColumnTitles1", QStringList()).toStringList();
  mColumnTitles2 = prefs.value("ColumnTitles2", QStringList()).toStringList();
  mEditorFont = prefs.value("EditorFont", QFont()).value<QFont>();
  mEnableBlanks = prefs.value("EnableBlanks", false).toBool();
  mEnterMove = prefs.value("EnterMove", 1).toInt();
  mSpecialCharacters = prefs.value("SpecialCharacters", QLatin1String("abcdefghi")).toString();
  mClearAll = prefs.value("ClearAll", false).toBool();
  mClearText = prefs.value("CleatText", true).toBool();
  mClearImageLink = prefs.value("ClearImageLink", false).toBool();
  mClearSoundLink = prefs.value("ClearSoundLink", false).toBool();
  prefs.endGroup();

  prefs.beginGroup("Quiz");
  mAutoCheck = prefs.value("AutoCheck", false).toBool();
  mAutoFlip = prefs.value("AutoFlip", false).toBool();
  mFlipDelay = prefs.value("FlipDelay", 3).toInt();
  mHintError = prefs.value("HintError", false).toBool();
  mKeepDiscard = prefs.value("KeepDiscard", 1).toInt();
  mMode = prefs.value("Mode", 1).toInt();
  mPercent = prefs.value("Percent", false).toBool();
  prefs.endGroup();

  prefs.beginGroup("FlashCard");
  mFrontFont = prefs.value("FrontFont", QFont()).value<QFont>();
  mFrontTextColor = prefs.value("FrontTextColor", QColor(Qt::black)).value<QColor>();
  mFrontCardColor = prefs.value("FrontCardColor", QColor(Qt::white)).value<QColor>();
  mFrontFrameColor = prefs.value("FrontFrameColor", QColor(Qt::red)).value<QColor>();
  mBackFont = prefs.value("BackFont", QFont()).value<QFont>();
  mBackTextColor = prefs.value("BackTextColor", QColor(Qt::black)).value<QColor>();
  mBackCardColor = prefs.value("BackCardColor", QColor(Qt::white)).value<QColor>();
  mBackFrameColor = prefs.value("BackFrameColor", QColor(Qt::blue)).value<QColor>();
  /*: KConfigSkeleton( QLatin1String( "kwordquizrc" ) )*/
//{
  /*Q_ASSERT(!s_globalPrefs->q);
  s_globalPrefs->q = this;

  setCurrentGroup( QLatin1String( "KNewStuff" ) );

  KConfigSkeleton::ItemPath  *itemProvidersUrl;
  itemProvidersUrl = new KConfigSkeleton::ItemPath( currentGroup(), QLatin1String( "ProvidersUrl" ), mProvidersUrl, "http://edu.kde.org/kvoctrain/providers.xml" );
  addItem( itemProvidersUrl, QLatin1String( "ProvidersUrl" ) );
  KConfigSkeleton::ItemString  *itemInstallationCommand;
  itemInstallationCommand = new KConfigSkeleton::ItemString( currentGroup(), QLatin1String( "InstallationCommand" ), mInstallationCommand, QLatin1String( "kwordquiz %f" ) );
  addItem( itemInstallationCommand, QLatin1String( "InstallationCommand" ) );
  KConfigSkeleton::ItemPath  *itemInstallPath;
  itemInstallPath = new KConfigSkeleton::ItemPath( currentGroup(), QLatin1String( "InstallPath" ), mInstallPath, QLatin1String( "Vocabularies" ) );
  addItem( itemInstallPath, QLatin1String( "InstallPath" ) );*/
}

void Prefs::writePrefs() 
{
  QSettings prefs;

  prefs.beginGroup("General");
  prefs.setValue("FirstRun", mFirstRun);
  prefs.setValue("ShowSearch", mShowSearch);
  prefs.setValue("StartSession", mStartSession);
  prefs.setValue("PrintStyle", mPrintStyle);
  prefs.setValue("MainWindowState", mMainWindowState);
  prefs.setValue("MainWindowSize", mMainWindowSize);
  prefs.setValue("MainWindowPosition", mMainWindowPosition);
  prefs.setValue("ShowStatusbar", mShowStatusbar);
  prefs.setValue("RecentFiles", mRecentFiles);
  prefs.setValue("LastOpenDir", mLastOpenDir);
  prefs.setValue("LastImageDir", mLastImageDir);
  prefs.setValue("LastSoundDir", mLastSoundDir);
  prefs.endGroup();

  prefs.beginGroup("Editor");
  prefs.setValue("ColumnTitles1", mColumnTitles1);
  prefs.setValue("ColumnTitles2", mColumnTitles2);
  prefs.setValue("EditorFont", mEditorFont);
  prefs.setValue("EnableBlanks", mEnableBlanks);
  prefs.setValue("EnterMove", mEnterMove);
  prefs.setValue("SpecialCharacters", mSpecialCharacters);
  prefs.setValue("ClearAll", mClearAll);
  prefs.setValue("CleatText", mClearText);
  prefs.setValue("ClearImageLink", mClearImageLink);
  prefs.setValue("ClearSoundLink", mClearSoundLink);
  prefs.endGroup();

  prefs.beginGroup("Quiz");
  prefs.setValue("AutoCheck", mAutoCheck);
  prefs.setValue("AutoFlip", mAutoFlip);
  prefs.setValue("FlipDelay", mFlipDelay);
  prefs.setValue("HintError", mHintError);
  prefs.setValue("KeepDiscard", mKeepDiscard);
  prefs.setValue("Mode", mMode);
  prefs.setValue("Percent", mPercent);
  prefs.endGroup();

  prefs.beginGroup("FlashCard");
  prefs.setValue("FrontFont", mFrontFont);
  prefs.setValue("FrontTextColor", mFrontTextColor);
  prefs.setValue("FrontCardColor", mFrontCardColor);
  prefs.setValue("FrontFrameColor", mFrontFrameColor);
  prefs.setValue("BackFont", mBackFont);
  prefs.setValue("BackTextColor", mBackTextColor);
  prefs.setValue("BackCardColor", mBackCardColor);
  prefs.setValue("BackFrameColor", mBackFrameColor);
  prefs.sync();
  //QMessageBox::about(0, "Prefs Calling", "Writing Prefs");
}

Prefs::~Prefs()
{
  /*if (!s_globalPrefs.isDestroyed()) {
    s_globalPrefs->q = 0;
  }*/
}

